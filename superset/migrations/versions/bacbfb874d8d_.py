"""empty message

Revision ID: bacbfb874d8d
Revises: d82b28aab0da
Create Date: 2020-10-20 17:53:10.750919

"""

# revision identifiers, used by Alembic.
revision = 'bacbfb874d8d'
down_revision = 'd82b28aab0da'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('slice_folders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('tree_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('lft', sa.Integer(), nullable=False),
    sa.Column('rgt', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['slice_folders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('slices', sa.Column('folder_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'slices', 'slice_folders', ['folder_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'slices', type_='foreignkey')
    op.drop_column('slices', 'folder_id')
    op.create_table('Вытянул деде репку',
    sa.Column('number', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('coord1', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('coord2', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('district', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('metro', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('num', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('testUO_csv',
    sa.Column('Number', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Created', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Created_blank', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Date_will_pat', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Date_startmed', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Date_endmed', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Date_takepat', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Date_aproved_source', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Date_aproved_target', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Datetime_appoint', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Profile', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Status', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Mo_source', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Doctor_dolzn_s', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Doctor_fio_s', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Diagnos_S', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Mo_target', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Doctor_dolzhn_t', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Doctor_fio_t', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Diagnos_t', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Is_approved_t', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Ppolis_num', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Telefon', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Книга',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Красная роза',
    sa.Column('ddd3edb9-e0f8-ab68-3c80-21cb621f9126', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('КДЛ', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('jj',
    sa.Column('pol_patienta', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('fio_vracha', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('kod_testa', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count1', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('Маргаритка и лютик',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('#', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('Test csv Юникод Big Endian.csv',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('M1',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('#', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('Kolonka',
    sa.Column('Kolonka', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('kolonka123', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('Rome&Vienna',
    sa.Column('lis_district', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('naimenovanie_lis_lvl1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('yyy',
    sa.Column('count0', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count3', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count4', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count5', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count6', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count7', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count8', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count9', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count10', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count11', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count13', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count14', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count15', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count16', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('RomeVienna',
    sa.Column('lis_district', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('naimenovanie_lis_lvl1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('GeoDataDat',
    sa.Column('number', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('coord1', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('coord2', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('district', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('metro', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('num', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('Гренада',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Vladivostok2000',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Станица Кущевская',
    sa.Column('Kolonka', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('kolonka123', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('long_lat',
    sa.Column('lon', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lat', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('street', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('unit', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('city', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('district', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('region', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('postcode', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('id', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('occupancy', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('radius_miles', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('1',
    sa.Column('1', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Test csv',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('birth_names',
    sa.Column('ds', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('num', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('sum_boys', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('sum_girls', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('Valio',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('White_rose',
    sa.Column('GUID;#', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Test csv UTF-8.csv',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('CSV UTF-8 (разделитель - запятая).csv',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('M2',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('#', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('complex_agr_test',
    sa.Column('doctor', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('lpu', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('region', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('year', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('month', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('day', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('hour', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('minute', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('stamp_tz', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True)
    )
    op.create_table('Test csv Юникод Big Endian',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Test строчной буквы',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('test_data',
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('month_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('month_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('day_num', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('practitioner_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('practitioner_role', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('practitioner_lpu', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('practitioner_lpu_region', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('patient_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('patient_age_bucket', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('patient_gender', sa.VARCHAR(length=255), autoincrement=False, nullable=True)
    )
    op.create_table('GeoData',
    sa.Column('number', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('coord1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('coord2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('district', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nearest_subway_ststion', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('num', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('multiformat_time_series',
    sa.Column('ds', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('ds2', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('epoch_ms', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('epoch_s', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('string0', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('string1', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('string2', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('string3', sa.VARCHAR(length=100), autoincrement=False, nullable=True)
    )
    op.create_table('Серая роза',
    sa.Column('GUID МО', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Подразделение\n(согласно GUID)', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('wb_health_population',
    *[sa.Column('NY_GNP_PCAP_CD', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_ADT_1524_LT_FM_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_ADT_1524_LT_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_ADT_1524_LT_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_ADT_LITR_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_ADT_LITR_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_ADT_LITR_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_ENR_ORPH', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_PRM_CMPT_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_PRM_CMPT_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_PRM_CMPT_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_PRM_ENRR', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_PRM_ENRR_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_PRM_ENRR_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_PRM_NENR', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_PRM_NENR_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_PRM_NENR_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_SEC_ENRR', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_SEC_ENRR_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_SEC_ENRR_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_SEC_NENR', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_SEC_NENR_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_SEC_NENR_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_TER_ENRR', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_TER_ENRR_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SE_XPD_TOTL_GD_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_ANM_CHLD_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_ANM_NPRG_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_CON_1524_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_CON_1524_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_CON_AIDS_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_CON_AIDS_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_DTH_COMM_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_DTH_IMRT', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_DTH_INJR_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_DTH_MORT', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_DTH_NCOM_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_DTH_NMRT', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_DYN_AIDS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_DYN_AIDS_DH', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_DYN_AIDS_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_DYN_AIDS_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_DYN_MORT', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_DYN_MORT_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_DYN_MORT_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_DYN_NMRT', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_FPL_SATI_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_H2O_SAFE_RU_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_H2O_SAFE_UR_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_H2O_SAFE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_HIV_0014', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_HIV_1524_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_HIV_1524_KW_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_HIV_1524_KW_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_HIV_1524_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_HIV_ARTC_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_HIV_KNOW_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_HIV_KNOW_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_HIV_ORPH', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_HIV_TOTL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_IMM_HEPB', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_IMM_HIB3', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_IMM_IBCG', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_IMM_IDPT', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_IMM_MEAS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_IMM_POL3', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_MED_BEDS_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_MED_CMHW_P3', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_MED_NUMW_P3', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_MED_PHYS_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_MLR_NETS_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_MLR_PREG_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_MLR_SPF2_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_MLR_TRET_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_MMR_DTHS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_MMR_LEVE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_MMR_RISK', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_MMR_RISK_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_MMR_WAGE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_PRG_ANEM', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_PRG_ARTC_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_PRG_SYPH_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_PRV_SMOK_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_PRV_SMOK_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_ACSN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_ACSN_RU', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_ACSN_UR', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_ANV4_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_ANVC_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_ARIC_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_BFED_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_BRTC_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_BRTW_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_DIAB_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_IYCF_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_MALN_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_MALN_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_MALN_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_MALR', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_MMRT', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_MMRT_NE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_ORCF_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_ORTH', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_OW15_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_OW15_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_OW15_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_OWGH_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_OWGH_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_OWGH_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_PNVC_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_STNT_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_STNT_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_STNT_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_WAST_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_WAST_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_STA_WAST_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_SVR_WAST_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_SVR_WAST_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_SVR_WAST_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_TBS_CURE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_TBS_DTEC_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_TBS_INCD', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_TBS_MORT', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_TBS_PREV', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_VAC_TTNS_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_XPD_EXTR_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_XPD_OOPC_TO_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_XPD_OOPC_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_XPD_PCAP', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_XPD_PCAP_PP_KD', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_XPD_PRIV', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_XPD_PRIV_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_XPD_PUBL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_XPD_PUBL_GX_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_XPD_PUBL_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_XPD_TOTL_CD', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SH_XPD_TOTL_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SI_POV_NAHC', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SI_POV_RUHC', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SI_POV_URHC', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SL_EMP_INSV_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SL_TLF_TOTL_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SL_TLF_TOTL_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SL_UEM_TOTL_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SL_UEM_TOTL_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SL_UEM_TOTL_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SM_POP_NETM', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SN_ITK_DEFC', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SN_ITK_DEFC_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SN_ITK_SALT_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SN_ITK_VITA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_ADO_TFRT', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_AMRT_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_AMRT_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_CBRT_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_CDRT_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_CONU_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_IMRT_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_IMRT_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_IMRT_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_LE00_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_LE00_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_LE00_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_SMAM_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_SMAM_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_TFRT_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_TO65_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_TO65_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_DYN_WFRT', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_HOU_FEMA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_MTR_1519_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_0004_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_0004_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_0004_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_0004_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_0014_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_0014_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_0014_TO', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_0014_TO_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_0509_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_0509_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_0509_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_0509_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_1014_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_1014_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_1014_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_1014_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_1519_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_1519_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_1519_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_1519_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_1564_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_1564_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_1564_TO', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_1564_TO_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_2024_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_2024_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_2024_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_2024_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_2529_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_2529_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_2529_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_2529_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_3034_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_3034_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_3034_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_3034_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_3539_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_3539_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_3539_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_3539_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_4044_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_4044_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_4044_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_4044_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_4549_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_4549_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_4549_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_4549_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_5054_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_5054_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_5054_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_5054_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_5559_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_5559_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_5559_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_5559_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_6064_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_6064_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_6064_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_6064_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_6569_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_6569_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_6569_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_6569_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_65UP_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_65UP_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_65UP_TO', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_65UP_TO_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_7074_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_7074_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_7074_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_7074_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_7579_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_7579_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_7579_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_7579_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_80UP_FE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_80UP_FE_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_80UP_MA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_80UP_MA_5Y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG00_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG00_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG01_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG01_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG02_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG02_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG03_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG03_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG04_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG04_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG05_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG05_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG06_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG06_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG07_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG07_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG08_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG08_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG09_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG09_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG10_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG10_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG11_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG11_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG12_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG12_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG13_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG13_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG14_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG14_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG15_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG15_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG16_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG16_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG17_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG17_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG18_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG18_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG19_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG19_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG20_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG20_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG21_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG21_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG22_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG22_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG23_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG23_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG24_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG24_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG25_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_AG25_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_BRTH_MF', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_DPND', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_DPND_OL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_DPND_YG', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_GROW', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_TOTL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_TOTL_FE_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_TOTL_FE_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_TOTL_MA_IN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_POP_TOTL_MA_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_REG_BRTH_RU_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_REG_BRTH_UR_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_REG_BRTH_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_REG_DTHS_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_RUR_TOTL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_RUR_TOTL_ZG', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_RUR_TOTL_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_URB_GROW', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_URB_TOTL', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_URB_TOTL_IN_ZS', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('SP_UWT_TFRT', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('country_code', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('region', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('year', postgresql.TIMESTAMP(), autoincrement=False, nullable=True)]
    )
    op.create_table('Test csv Юникод',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Сычуаньский городовой',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Test csv UTF-8 (разделитель - запятая)',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Тестим русское название csv файла',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('jj2',
    sa.Column('mo_district', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mo_1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count2', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('Darkk_rose',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('#', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('random_time_series',
    sa.Column('ds', postgresql.TIMESTAMP(), autoincrement=False, nullable=True)
    )
    op.create_table('energy_usage',
    sa.Column('source', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('target', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('value', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('N3BI-344',
    sa.Column('Alpha', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Omega', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Lambda30',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Tests', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Mikro', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('virus', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('histol', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('L1',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('#', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('CSV_UTF-8_clickhouse',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Физалис',
    sa.Column('kod', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pod', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('test',
    sa.Column('region', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=255), autoincrement=False, nullable=True)
    )
    op.create_table('Связка GUID  и наименования МО',
    sa.Column('GUID МО', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Подразделение\n(согласно GUID)', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Vladivostok',
    sa.Column('lis_district', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('naimenovanie_lis_lvl1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('Fint',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('GUID-название МО',
    sa.Column('GUID МО;"Подразделение', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Test csv ANSI',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('SaintPetersburg',
    sa.Column('lis_district', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('naimenovanie_lis_lvl1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('M',
    sa.Column('DisMO', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('MO', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('DisLab', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Lab', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Pol', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Count', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('Рим и Вена',
    sa.Column('lis_district', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('naimenovanie_lis_lvl1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('correct_observation_mart',
    sa.Column('request_order_key', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('target_org_key', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('target_org_lvl1_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('target_org_lvl2_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('target_org_lvl3_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('target_district_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source_org_key', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source_org_lvl1_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source_org_lvl2_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source_org_lvl3_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source_district_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source_practitioner_key', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source_practitioner_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source_practitioner_role', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subject_patient_key', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('global_patient_key', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subject_patient_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subject_patient_gender', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subject_patient_birthdate', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subject_patient_age', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('subject_patient_age_bucket', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('assigner_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('assigner_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('observation_key', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('observation_publish_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('observation_publish_year', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('observation_publish_month', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('observation_publish_day', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lateus_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lateus_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('observation_method', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('issued', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('valuequantity_value', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('valuequantity_units', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('valuestring', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('valuequantity_condition', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('valuequantity_condition_meet', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('referencerange_low_value', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('referencerange_low_units', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('referencerange_high_value', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('referencerange_high_units', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('CSV (разделитель - запятая) 3',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('1111',
    sa.Column('column1', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('column2', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('Test csv UTF-8',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Test csv Юникод.csv',
    sa.Column('GUID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Podrazdelenie_po_GUID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('SPb',
    sa.Column('lis_district', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('naimenovanie_lis_lvl1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('count', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('test_view',
    sa.Column('brewery_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('website', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('state', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('state_breweries', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.drop_table('slice_folders')
    # ### end Alembic commands ###
